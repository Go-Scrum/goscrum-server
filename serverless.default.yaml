service: goscrum-server

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-offline
  - serverless-offline-scheduler

package:
  exclude:
    - ./**
  include:
    - ./bin/**

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: go1.x
  profile: goscrum
  memorySize: 256 # optional, in MB, default is 1024
  timeout: 30 # optional, in seconds, default is 6
  apiGateway:
    restApiId: ${file(./serverless.${self:custom.stage}.yaml):API_REST_ID}
    restApiRootResourceId: ${file(./serverless.${self:custom.stage}.yaml):API_RESOURCE_ID}
  environment:
    DEBUG: true
    DATABASE_NAME: ${env:DATABASE_NAME}
    DATABASE_HOSTNAME: ${env:DATABASE_HOSTNAME}
    DATABASE_USERNAME: ${env:DATABASE_USERNAME}
    DATABASE_PASSWORD: ${env:DATABASE_PASSWORD}
    DATABASE_PORT: ${env:DATABASE_PORT}
    API_URL: ${file(./serverless.${self:custom.stage}.yaml):API_URL}
    WEB_APP_URL: ${file(./serverless.${self:custom.stage}.yaml):WEB_APP_URL}
    MATTERMOST_PLUGIN_URL: ${file(./serverless.${self:custom.stage}.yaml):MATTERMOST_PLUGIN_URL}
    LOCAL: ${file(./serverless.${self:custom.stage}.yaml):LOCAL}
    GITLAB_ACCESS_TOKEN: ${env:GITLAB_ACCESS_TOKEN}

functions:
  migrate:
    handler: bin/migrate

  bot:
    handler: bin/bot
#    events:
#      - schedule: rate(1 minute)

  workspace:
    handler: bin/workspace
    events:
      - http:
          path: workspace
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:ap-south-1:145912607509:userpool/ap-south-1_MzWALNIiB
          cors: true

      - http:
          path: workspace
          method: get
          authorizer:
            arn: arn:aws:cognito-idp:ap-south-1:145912607509:userpool/ap-south-1_MzWALNIiB
          cors: true

  project:
    handler: bin/project
    events:
      - http:
          path: projects
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:ap-south-1:145912607509:userpool/ap-south-1_MzWALNIiB
          cors: true

      - http:
          path: projects
          method: get
          authorizer:
            arn: arn:aws:cognito-idp:ap-south-1:145912607509:userpool/ap-south-1_MzWALNIiB
          cors: true

      - http:
          path: projects/{id}
          method: get
          authorizer:
            arn: arn:aws:cognito-idp:ap-south-1:145912607509:userpool/ap-south-1_MzWALNIiB
          cors: true

  oauth:
    handler: bin/oauth
    events:
      - http:
          path: oauth/mattermost/{workspaceId}/login
          method: get
          request:
            parameters:
              pathParameters:
                workspaceId: true
      - http:
          path: oauth/mattermost/callback
          method: get
          request:
            parameters:
              querystrings:
                code: true
          cors: true

  mattermost:
    handler: bin/mattermost
    events:
      - http:
          path: mattermost/{workspaceId}/teams
          method: get
          request:
            parameters:
              pathParameters:
                workspaceId: true
          cors: true

      - http:
          path: mattermost/{workspaceId}/{teamId}/channels
          method: get
          request:
            parameters:
              pathParameters:
                workspaceId: true
          cors: true

      - http:
          path: mattermost/{workspaceId}/channel/{channelId}/participants
          method: get
          request:
            parameters:
              pathParameters:
                workspaceId: true
                channelId: true
          cors: true

      - http:
          path: mattermost/bot
          method: get
          cors: true

      - http:
          path: /mattermost/bot/{projectId}/{participantId}/question
          method: get
          request:
            parameters:
              pathParameters:
                projectId: true
                participantId: true
          cors: true

      - http:
          path: /mattermost/bot/question/{questionId}
          method: get
          request:
            parameters:
              pathParameters:
                questionId: true
          cors: true

      - http:
          path: /mattermost/bot/user/activity
          method: post
          cors: true

      - http:
          path: /mattermost/bot/user/{userId}/action
          method: post
          cors: true

      - http:
          path: /mattermost/bot/user/{userId}/action
          method: get
          cors: true

      - http:
          path: /mattermost/bot/user/{userId}/message
          method: post
          cors: true

  gitlab:
    handler: bin/gitlab
    events:
      - http:
          path: gitlab/{projectId}/commits
          method: get
          request:
            parameters:
              pathParameters:
                projectId: true
          cors: true

      - http:
          path: gitlab/issues
          method: post
          cors: true

      - http:
          path: gitlab/users
          method: get
          cors: true

      - http:
          path: gitlab/projects
          method: get
          cors: true

      - http:
          path: gitlab/{projectId}/events
          method: get
          request:
            parameters:
              pathParameters:
                userId: true
          cors: true
